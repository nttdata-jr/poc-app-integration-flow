name: Analysis, build, pack and upload artifact.
on:
    workflow_dispatch:
        inputs:
            repository_name:
                description: 'Nombre del repositorio a procesar'
                required: true
                type: string
            branch_name:
                description: 'Rama del repositorio a procesar'
                required: true
                type: string
            environment:
                description: 'Entorno de despliegue'
                required: true
            port_run_id:
                description: 'ID de la ejecucion en Port'
                required: false
                type: string
            port_context:
                description: 'Contexto proporcionado por Port'
                required: false
                type: string
            blueprint_id:
                description: 'Nombre del blueprint'
                required: false
                type: string
jobs:
    building-artifact:
        runs-on: ubuntu-latest
        steps:
            - name: Dinamic checkout code
              uses: actions/checkout@v4.2.2
              with:
                repository: ${{ github.repository_owner }}/${{ github.event.inputs.repository_name }}
                ref: ${{ github.event.inputs.branch_name }}
                token: ${{ secrets.REPO_ACCESS_TOKEN }}
                fetch-depth: 0
            - name: Set up JDK 17
              uses: actions/setup-java@v3.14.1
              with:
                java-version: '17'
                distribution: 'temurin'
                cache: 'maven'
            - name: Cache Sonar
              uses: actions/cache@v4.2.3
              with:
                path: ~/.sonar/cache
                key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
                restore-keys: ${{ runner.os }}-sonar
            - name: Sending to Scan SonarQube
              id: sonar_scan_step
              uses: SonarSource/sonarcloud-github-action@v5.0.0
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                projectBaseDir: .
                args: >
                  -Dsonar.organization=nttdata-jr
                  -Dsonar.projectKey=${{ github.event.inputs.repository_name }}
                  -Dsonar.sources=.
            - name: Build and Pack
              run: echo "Building and packing artifact"
            - name: Sending to Nexus
              run: echo "Uploading artifact"
            - name: Report status to Port
              if: always()
              uses: port-labs/port-github-action@v1.7.2
              with:
                clientId: ${{ secrets.PORT_CLIENT_ID }}
                clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
                baseUrl: https://api.getport.io
                operation: PATCH_RUN
                identifier: ${{ github.event.inputs.repository_name }}
                blueprint: ${{ github.event.inputs.port_context.blueprint_id }}
                properties: |
                  {
                    "last_build_status": "SUCCESS",
                    "last_build_date": "{{ env.BUILD_DATE }}",
                    "sonar_quality_gate_status": "PASSED"
                  }
                runId: ${{ github.event.inputs.port_run_id }}
                status: "SUCCESS"
                logMessage: |
                  SonarCloud Quality Gate Status: ${{ steps.sonarqube-quality-gate-check.outputs.qualityGateStatus }}
                  Análisis completado para el repositorio: ${{ github.event.inputs.repository_name }}.
                  Utilizando el branch: ${{ github.event.inputs.branch_name }}.
                  En el ambiente: ${{ github.event.inputs.environment }}
                  Revisar en SonarCloud para más detalles.
