name: Analysis, build, pack and upload artifact.
on:
    workflow_dispatch:
        inputs:
            repository_name:
                description: 'Nombre del repositorio a procesar'
                required: true
                type: string
            branch_name:
                description: 'Rama del repositorio a procesar'
                required: true
                type: string
            environment:
                description: 'Entorno de despliegue'
                required: true
            port_run_id:
                description: 'ID de la ejecucion en Port'
                required: false
                type: string
            port_context:
                description: 'Contexto proporcionado por Port'
                required: false
                type: string
            blueprint_id:
                description: 'Nombre del blueprint'
                required: false
                type: string
jobs:
    building-artifact:
        runs-on: ubuntu-latest
        steps:
            - name: Dinamic checkout code
              uses: actions/checkout@v4.2.2
              with:
                repository: ${{ github.repository_owner }}/${{ github.event.inputs.repository_name }}
                ref: ${{ github.event.inputs.branch_name }}
                token: ${{ secrets.REPO_ACCESS_TOKEN }}
                fetch-depth: 0
            - name: Set up JDK 17
              uses: actions/setup-java@v3.14.1
              with:
                java-version: '17'
                distribution: 'temurin'
                cache: 'maven'
            - name: Cache Sonar
              uses: actions/cache@v4.2.3
              with:
                path: ~/.sonar/cache
                key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
                restore-keys: ${{ runner.os }}-sonar
            - name: Sending to Scan SonarQube
              id: sonar_scan_step
              uses: SonarSource/sonarcloud-github-action@v5.0.0
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              with:
                projectBaseDir: .
                args: >
                  -Dsonar.organization=nttdata-jr
                  -Dsonar.projectKey=${{ github.event.inputs.repository_name }}
                  -Dsonar.sources=.
            - name: Sonar Quality Gate Check
              id: sonarqube-quality-gate-check
              uses: SonarSource/sonarqube-quality-gate-action@v1.2.0
              timeout-minutes: 3
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            - name: Get SonarCloud Metrics
              id: sonar_metrics
              run: |
                SONAR_ORGANIZATION="nttdata-jr"
                SONAR_PROJECT_KEY="${{ github.event.inputs.repository_name }}"
                SONAR_API_URL="https://sonarcloud.io/api/measures/search?projectKeys=hello-world-biec&metricKeys=bugs,vulnerabilities,code_smells,coverage,duplicated_lines_density"
                echo "Calling SonarCloud API URL: ${SONAR_API_URL}"
                curl -v -H "Authorization: Basic $(echo -n ${{ secrets.SONAR_TOKEN }}: | base64)" "${SONAR_API_URL}" > api_response.json
                echo "API Response:"
                cat api_response.json
                echo ""
                echo "Checking for 'component' in response:"
                jq .component api_response.json || true
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                shell: bash
            - name: Actualizar propiedades a Port.io
              if: always()
              uses: port-labs/port-github-action@v1.7.2
              with:
                  clientId: ${{ secrets.PORT_CLIENT_ID }}
                  clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
                  operation: UPSERT
                  baseUrl: https://api.getport.io
                  identifier: ${{ github.event.inputs.repository_name }}
                  blueprint: ${{ github.event.inputs.blueprint_id }}
                  properties: |
                    {
                      "sonar_quality_gate_status": "${{ steps.sonarqube-quality-gate-check.outputs.qualityGateStatus || 'UNKNOWN' }}",
                      "sonar_bugs": ${{ steps.sonar_metrics.outputs.bugs || 0 }},
                      "sonar_vulnerabilities": ${{ steps.sonar_metrics.outputs.vulnerabilities || 0 }},
                      "sonar_code_smells": ${{ steps.sonar_metrics.outputs.code_smells || 0 }},
                      "sonar_coverage": ${{ steps.sonar_metrics.outputs.coverage || 0 }},
                      "sonar_duplications": ${{ steps.sonar_metrics.outputs.duplications || 0 }},
                      "sonar_report_url": "${{ steps.sonar_report_url.outputs.sonar_report_url || '' }}",
                      "last_sonar_analysis_date": "$(date +%Y-%m-%dT%H:%M:%SZ)"
                    }
            - name: Reportar estado y métricas a Port.io
              if: always()
              uses: port-labs/port-github-action@v1.7.2
              with:
                  clientId: ${{ secrets.PORT_CLIENT_ID }}
                  clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
                  operation: PATCH_RUN
                  baseUrl: https://api.getport.io
                  runId: ${{ github.event.inputs.port_run_id }}
                  status: ${{ (steps.sonarqube-quality-gate-check.outputs.qualityGateStatus == 'PASSED' && 'SUCCESS') || (steps.sonarqube-quality-gate-check.outputs.qualityGateStatus == 'FAILED' && 'FAILURE') || 'PENDING' }}
                  logMessage: |
                    --- Resumen de la Ejecución ---
                    --- Métricas de Calidad de SonarCloud ---
                    Bugs: ${{ steps.sonar_metrics.outputs.bugs }}
                    Vulnerabilidades: ${{ steps.sonar_metrics.outputs.vulnerabilities }}
                    Code Smells: ${{ steps.sonar_metrics.outputs.code_smells }}
                    Cobertura (%): ${{ steps.sonar_metrics.outputs.coverage }}
                    Duplicaciones (%): ${{ steps.sonar_metrics.outputs.duplications }}
                    Reporte: ${{ steps.sonar_report_url.outputs.sonar_report_url }}
            - name: Build and Pack
              run: echo "Building and packing artifact"
            - name: Sending to Nexus
              run: echo "Uploading artifact"
